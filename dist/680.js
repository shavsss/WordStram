"use strict";(self.webpackChunkwordstream=self.webpackChunkwordstream||[]).push([[680],{6448:(e,t,r)=>{r.d(t,{A:()=>c});var o=r(8542),s=r(7334),n=r(9035),a=function(e,t,r,o){return new(r||(r=Promise))((function(s,n){function a(e){try{c(o.next(e))}catch(e){n(e)}}function i(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}c((o=o.apply(e,t||[])).next())}))};const i={getCurrentUser(){var e;const t=(0,s.HW)();return t?(this.updateAuthState(t),t):"undefined"!=typeof window&&(null===(e=window.WordStream)||void 0===e?void 0:e.currentUser)?window.WordStream.currentUser:(this.checkStorageAuth(),null)},isAuthenticated(){return!!this.getCurrentUser()},updateAuthState(e){"undefined"!=typeof window&&(window.WordStream||(window.WordStream={}),e?(window.WordStream.currentUser={uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL},window.WordStream.isAuthenticated=!0):(window.WordStream.currentUser=void 0,window.WordStream.isAuthenticated=!1)),this.saveToStorage(e)},saveToStorage(e){var t;try{if("undefined"!=typeof localStorage&&(e?(localStorage.setItem("wordstream_auth_state","authenticated"),localStorage.setItem("wordstream_user_info",JSON.stringify({uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL}))):(localStorage.removeItem("wordstream_auth_state"),localStorage.removeItem("wordstream_user_info"))),"undefined"!=typeof chrome&&(null===(t=chrome.storage)||void 0===t?void 0:t.local)){const t=e?{isAuthenticated:!0,userInfo:{uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL},lastAuthCheck:(new Date).toISOString()}:{isAuthenticated:!1,userInfo:null,lastAuthCheck:(new Date).toISOString()};chrome.storage.local.set(t)}}catch(e){console.warn("WordStream AuthManager: Error saving auth state:",e)}},checkStorageAuth(){return a(this,void 0,void 0,(function*(){var e;try{if("undefined"!=typeof chrome&&(null===(e=chrome.storage)||void 0===e?void 0:e.local)){const e=yield new Promise((e=>{chrome.storage.local.get(["isAuthenticated","userInfo"],(t=>{e(t)}))}));if(e.isAuthenticated&&e.userInfo)return"undefined"!=typeof window&&(window.WordStream||(window.WordStream={}),window.WordStream.currentUser=e.userInfo,window.WordStream.isAuthenticated=!0),e.userInfo}if("undefined"!=typeof localStorage){const e=localStorage.getItem("wordstream_auth_state"),t=localStorage.getItem("wordstream_user_info");if("authenticated"===e&&t){const e=JSON.parse(t);return"undefined"!=typeof window&&(window.WordStream||(window.WordStream={}),window.WordStream.currentUser=e,window.WordStream.isAuthenticated=!0),e}}}catch(e){console.warn("WordStream AuthManager: Error checking storage auth:",e)}return null}))},verifyTokenAndRefresh(){return a(this,void 0,void 0,(function*(){try{const e=this.getCurrentUser();if(!e)return console.warn("WordStream AuthManager: No user to refresh token"),!1;if(o.auth.currentUser)try{if(console.log("WordStream AuthManager: Reload existing user"),yield o.auth.currentUser.reload(),!o.auth.currentUser)return console.warn("WordStream AuthManager: User disappeared after reload"),!1}catch(e){console.warn("WordStream AuthManager: Error reloading user:",e)}else console.warn("WordStream AuthManager: No Firebase auth.currentUser available for token refresh");let t;if(o.auth.currentUser&&"function"==typeof o.auth.currentUser.getIdToken)try{console.log("WordStream AuthManager: Forcing token refresh via Firebase auth"),t=yield o.auth.currentUser.getIdToken(!0)}catch(e){console.warn("WordStream AuthManager: Firebase token refresh failed:",e)}if(!t&&"function"==typeof e.getIdToken)try{console.log("WordStream AuthManager: Forcing token refresh via cached user"),t=yield e.getIdToken(!0)}catch(e){return console.warn("WordStream AuthManager: Cached user token refresh failed:",e),!1}if(!t)return console.warn("WordStream AuthManager: Failed to obtain fresh token"),!1;yield new Promise((e=>setTimeout(e,1500)));const r=o.auth.currentUser||e;return this.updateAuthState(r),console.log("WordStream AuthManager: Token refreshed successfully"),!0}catch(e){return console.warn("WordStream AuthManager: Token refresh failed:",e),!1}}))},checkPermissions(){return a(this,void 0,void 0,(function*(){try{if(!this.isAuthenticated())return console.warn("WordStream AuthManager: Cannot check permissions - user not authenticated"),!1;const e=this.getCurrentUser();if(!e||!e.uid)return console.warn("WordStream AuthManager: Cannot check permissions - no valid user ID"),!1;try{return console.log("WordStream AuthManager: Testing permissions with basic document read"),yield d(),console.log("WordStream AuthManager: Permissions check passed"),!0}catch(e){if("permission-denied"===(null==e?void 0:e.code)){console.warn("WordStream AuthManager: Permission denied, attempting aggressive token refresh");try{if(yield this.verifyTokenAndRefresh())try{return yield d(),console.log("WordStream AuthManager: Permissions check passed after token refresh"),!0}catch(e){console.warn("WordStream AuthManager: Still no permissions after token refresh")}}catch(e){console.warn("WordStream AuthManager: Error during permissions retry:",e)}}return console.warn("WordStream AuthManager: Permission check failed:",(null==e?void 0:e.code)||e),!1}}catch(e){return console.warn("WordStream AuthManager: Error during permission check:",e),!1}}))},reauthenticateIfNeeded(){return a(this,void 0,void 0,(function*(){var e,t;try{console.log("WordStream: Starting reauthentication process");if(yield this.checkPermissions())return console.log("WordStream: User already has valid permissions"),!0;const r=this.getCurrentUser();if(!r)return console.warn("WordStream: No user found for reauthentication"),!1;console.log("WordStream: Found user for reauthentication:",r.uid);if("function"==typeof(null===(e=o.auth.currentUser)||void 0===e?void 0:e.reload))try{console.log("WordStream: Attempting to reload Firebase user"),yield o.auth.currentUser.reload(),"function"==typeof o.auth.currentUser.getIdToken&&(yield o.auth.currentUser.getIdToken(!0));if(yield this.checkPermissions())return console.log("WordStream: User reload reauthentication succeeded"),!0}catch(e){console.warn("WordStream: Error reloading Firebase user:",e)}if("function"==typeof r.getIdToken)try{console.log("WordStream: Attempting direct token refresh"),yield r.getIdToken(!0);if(yield this.checkPermissions())return console.log("WordStream: Direct token refresh succeeded"),!0}catch(e){console.warn("WordStream: Error refreshing token directly:",e)}if("undefined"!=typeof chrome&&(null===(t=chrome.runtime)||void 0===t?void 0:t.id))try{console.log("WordStream: Attempting Chrome extension-specific authentication"),localStorage.removeItem("wordstream_auth_state"),localStorage.setItem("wordstream_auth_state","refreshing"),chrome.identity&&"function"==typeof chrome.identity.getAuthToken&&(yield new Promise(((e,t)=>{chrome.identity.getAuthToken({interactive:!1},(r=>{chrome.runtime.lastError?(console.warn("WordStream: Chrome identity error:",chrome.runtime.lastError),t(chrome.runtime.lastError)):r?(console.log("WordStream: Got new Chrome identity token"),e()):t(new Error("No token returned"))}))}))),this.saveToStorage(r);if(yield this.checkPermissions())return console.log("WordStream: Chrome-specific reauthentication succeeded"),!0}catch(e){console.warn("WordStream: Error in Chrome-specific reauthentication:",e)}return(yield this.checkPermissions())?(console.log("WordStream: Reauthentication eventually succeeded"),!0):(console.warn("WordStream: All reauthentication attempts failed, user interaction may be needed"),!1)}catch(e){return console.warn("WordStream: Unhandled error during reauthentication:",e),!1}}))}},c=i;function d(){return a(this,void 0,void 0,(function*(){try{const e=i.getCurrentUser();if(!e)return null;const t=(0,n.doc)(n.firestore,"users",e.uid),r=yield(0,n.getDoc)(t);if(r.exists())return Object.assign({id:r.id},r.data());{const r={uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL,createdAt:new Date};return yield(0,n.setDoc)(t,r),r}}catch(e){return console.error("Error getting user profile document:",e),null}}))}},7334:(e,t,r)=>{r.d(t,{HW:()=>s});r(5908);var o=r(8542);r(2405);function s(){const e=o.auth.currentUser;console.log("WordStream Auth: Getting current user from auth:",e?`User ${e.email} (uid: ${e.uid})`:"No user in auth object");try{if(!e&&"undefined"!=typeof window&&window.WordStream&&window.WordStream.currentUser)return console.log("WordStream Auth: Found user in window.WordStream:",window.WordStream.currentUser),window.WordStream.currentUser;if(!e&&"undefined"!=typeof localStorage){const e=localStorage.getItem("wordstream_user");if(e)try{const t=JSON.parse(e);return console.log("WordStream Auth: Found user in localStorage:",t),t}catch(e){console.warn("WordStream Auth: Error parsing stored user:",e)}}}catch(e){console.error("WordStream Auth: Error in additional user checks:",e)}return console.log("WordStream Auth: Auth state:",o.auth.currentUser?"Authenticated":"Not authenticated","SignIn methods count:",null!==o.auth.languageCode?"Available":"Not available"),e}},9035:(e,t,r)=>{r.r(t),r.d(t,{Timestamp:()=>o.Dc,addDoc:()=>o.gS,arrayRemove:()=>o.C3,arrayUnion:()=>o.hq,checkFirestoreConnection:()=>V,checkIfMigrationNeeded:()=>C,collection:()=>o.rJ,debouncedSyncToFirestore:()=>x,debugChats:()=>R,debugFirestoreState:()=>M,debugFirestoreStructure:()=>F,debugSyncStatus:()=>H,deleteAllChatsForVideo:()=>O,deleteAllNotesForVideo:()=>B,deleteChat:()=>I,deleteDoc:()=>o.kd,deleteNote:()=>A,deleteWord:()=>y,doc:()=>o.H9,documentId:()=>o.Fs,ensureAuthenticatedUser:()=>h,firestore:()=>s.firestore,forceResyncChats:()=>P,forceResyncNotes:()=>J,getAllVideosWithNotes:()=>L,getChats:()=>W,getCurrentUserId:()=>u,getDoc:()=>o.x7,getDocs:()=>o.GG,getNotes:()=>D,getUserData:()=>T,getUserDocRef:()=>l,getUserStats:()=>k,getWords:()=>S,initializeFirestoreSync:()=>m,isSyncRequired:()=>G,migrateStorageDataToFirestore:()=>j,onSnapshot:()=>o.aQ,orderBy:()=>o.My,query:()=>o.P,saveChat:()=>p,saveNote:()=>U,saveUserData:()=>N,saveUserStats:()=>$,saveWord:()=>f,serverTimestamp:()=>o.O5,setDoc:()=>o.BN,setupBroadcastListener:()=>Z,subscribeToAllChats:()=>E,syncBetweenStorageAndFirestore:()=>_,syncWordsToFirestore:()=>w,updateDoc:()=>o.mZ,updateUserStats:()=>Q,where:()=>o._M});var o=r(2405),s=r(8542),n=r(6448),a=r(768),i=r(1712),c=r(6235),d=(r(5908),function(e,t,r,o){return new(r||(r=Promise))((function(s,n){function a(e){try{c(o.next(e))}catch(e){n(e)}}function i(e){try{c(o.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}c((o=o.apply(e,t||[])).next())}))});function l(){const e=u();return e?(0,o.H9)(s.firestore,"users",e):null}function u(){var e,t;try{const r=n.A.getCurrentUser();if(r&&r.uid)return r.uid;if("undefined"!=typeof window&&(null===(t=null===(e=window.WordStream)||void 0===e?void 0:e.currentUser)||void 0===t?void 0:t.uid))return console.log("WordStream: Using user from window.WordStream:",window.WordStream.currentUser.uid),window.WordStream.currentUser.uid;if("undefined"!=typeof localStorage)try{const e=localStorage.getItem("wordstream_auth_state"),t=localStorage.getItem("wordstream_user_info");if("authenticated"===e&&t){const e=JSON.parse(t);if(e&&e.uid)return console.log("WordStream: Using user from localStorage:",e.uid),e.uid}}catch(e){console.warn("WordStream: Error reading auth from localStorage:",e)}return console.warn("WordStream: No authenticated user found"),null}catch(e){return console.warn("WordStream: Error getting current user ID:",e),null}}function h(){return d(this,void 0,void 0,(function*(){try{const e=u();if(!e)return null;return(yield n.A.verifyTokenAndRefresh())?e:(console.warn("WordStream: Token validation failed"),null)}catch(e){return console.warn("WordStream: Auth validation error:",e),null}}))}function m(){const e=u();e?(!function(e){const t=(0,o.rJ)(s.firestore,"users",e,"userData","wordlist","items");(0,o.aQ)(t,(e=>{try{const t=e.docs.map((e=>Object.assign({id:e.id},e.data())));console.log(`WordStream: Synced ${t.length} words from Firestore`),chrome.storage.sync.set({words:t},(()=>{g({action:"WORDS_UPDATED",words:t})}))}catch(e){console.error("WordStream: Error processing wordlist sync:",e)}}),(e=>{console.error("WordStream: Error in wordlist sync:",e)}))}(e),function(e){const t=(0,o.rJ)(s.firestore,"users",e,"userData","chats","items");(0,o.aQ)(t,(e=>{try{const t=e.docs.map((e=>{var t,r;const o=e.data();return Object.assign(Object.assign({id:e.id},o),{createdAt:null===(t=(0,a.cP)(o.createdAt))||void 0===t?void 0:t.toISOString(),updatedAt:null===(r=(0,a.cP)(o.updatedAt))||void 0===r?void 0:r.toISOString(),messages:Array.isArray(o.messages)?o.messages.map((e=>{var t;return Object.assign(Object.assign({},e),{timestamp:(null===(t=(0,a.cP)(e.timestamp))||void 0===t?void 0:t.toISOString())||(new Date).toISOString()})})):[]})}));console.log(`WordStream: Synced ${t.length} chats from Firestore`),chrome.storage.sync.set({chats:t},(()=>{g({action:"CHATS_UPDATED",chats:t})}))}catch(e){console.error("WordStream: Error processing chats sync:",e)}}),(e=>{console.error("WordStream: Error in chats sync:",e)}))}(e),function(e){const t=(0,o.rJ)(s.firestore,"users",e,"userData","notes","items");(0,o.aQ)(t,(e=>{try{const t=e.docs.map((e=>{var t,r;const o=e.data();return Object.assign(Object.assign({id:e.id},o),{createdAt:null===(t=(0,a.cP)(o.createdAt))||void 0===t?void 0:t.toISOString(),updatedAt:null===(r=(0,a.cP)(o.updatedAt))||void 0===r?void 0:r.toISOString()})}));console.log(`WordStream: Synced ${t.length} notes from Firestore`),chrome.storage.sync.set({notes:t},(()=>{g({action:"NOTES_UPDATED",notes:t})}))}catch(e){console.error("WordStream: Error processing notes sync:",e)}}),(e=>{console.error("WordStream: Error in notes sync:",e)}))}(e),function(e){const t=(0,o.rJ)(s.firestore,"users",e,"userData"),r=(0,o.H9)(t,"stats");(0,o.aQ)(r,(e=>{var t;try{const r=e.data()||{},o=Object.assign(Object.assign({},r),{lastActive:(null===(t=(0,a.cP)(r.lastActive))||void 0===t?void 0:t.toISOString())||(new Date).toISOString()});console.log("WordStream: Synced stats from Firestore"),chrome.storage.sync.set({stats:o},(()=>{g({action:"STATS_UPDATED",stats:o})}))}catch(e){console.error("WordStream: Error processing stats sync:",e)}}),(e=>{console.error("WordStream: Error in stats sync:",e)}))}(e),console.log("WordStream: Firestore sync initialized for user:",e)):console.warn("WordStream: Cannot initialize Firestore sync - no user ID available")}function g(e){try{if("undefined"!=typeof window){console.log("WordStream: Broadcasting message:",e),window.postMessage(e,"*");const t=(new Date).getTime(),r=`wordstream_broadcast_${t}`;localStorage.setItem(r,JSON.stringify(Object.assign(Object.assign({},e),{timestamp:t})));try{const e=[];for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r&&r.startsWith("wordstream_broadcast_")&&e.push(r)}e.sort().reverse(),e.length>20&&e.slice(20).forEach((e=>localStorage.removeItem(e)))}catch(e){console.warn("WordStream: Error cleaning up broadcast messages:",e)}}}catch(e){console.error("WordStream: Error broadcasting message:",e)}}function f(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.error("WordStream: Cannot save word - no authenticated user"),null;const r=(0,o.rJ)(s.firestore,"users",t,"wordlist"),n=(0,o.P)(r,(0,o._M)("originalWord","==",e.originalWord),(0,o._M)("sourceLanguage","==",e.sourceLanguage),(0,o._M)("targetLanguage","==",e.targetLanguage)),a=yield(0,o.GG)(n);let i;if(a.empty){i=(yield(0,o.gS)(r,Object.assign(Object.assign({},e),{createdAt:(0,o.O5)(),updatedAt:(0,o.O5)()}))).id}else{i=a.docs[0].id,yield(0,o.mZ)((0,o.H9)(r,i),Object.assign(Object.assign({},e),{updatedAt:(0,o.O5)()}))}return v(t),i}catch(e){return console.error("WordStream: Error saving word:",e),null}}))}function S(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.warn("WordStream: Cannot get words - no authenticated user"),[];const t=(0,o.rJ)(s.firestore,"users",e,"userData","wordlist","items"),r=(yield(0,o.GG)(t)).docs.map((e=>Object.assign({id:e.id},e.data())));return console.log(`WordStream: Retrieved ${r.length} words`),r}catch(e){return console.error("WordStream: Error getting words:",e),[]}}))}function y(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot delete word - no authenticated user"),!1;const r=(0,o.rJ)(s.firestore,"users",t,"userData","wordlist","items");return yield(0,o.kd)((0,o.H9)(r,e)),yield v(t),console.log(`WordStream: Successfully deleted word ${e}`),!0}catch(e){return console.error("WordStream: Error deleting word:",e),!1}}))}function v(e){return d(this,void 0,void 0,(function*(){try{const t=(0,o.rJ)(s.firestore,"users",e,"wordlist"),r=yield(0,o.GG)(t),n=(0,o.rJ)(s.firestore,"users",e,"userData"),a=(0,o.H9)(n,"stats");yield(0,o.BN)(a,{totalWords:r.size,lastUpdated:(0,o.O5)()},{merge:!0})}catch(e){console.error("WordStream: Error updating word count in stats:",e)}}))}function w(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot sync words - no authenticated user"),!1;const r=(0,o.rJ)(s.firestore,"users",t,"userData","wordlist","items"),n=(0,o.wP)(s.firestore),a=yield(0,o.GG)(r),i=new Map;a.docs.forEach((e=>{const t=e.data(),r=`${t.originalWord}-${t.sourceLanguage}-${t.targetLanguage}`;i.set(r,e.id)}));let c=0,d=0;for(const t of e){if(!t.originalWord||!t.targetWord){console.warn("WordStream: Skipping invalid word:",t);continue}const e=`${t.originalWord}-${t.sourceLanguage}-${t.targetLanguage}`;if(i.has(e)){const s=i.get(e);n.update((0,o.H9)(r,s),Object.assign(Object.assign({},t),{updatedAt:(0,o.O5)()})),c++}else{const e=(0,o.H9)(r);n.set(e,Object.assign(Object.assign({},t),{createdAt:(0,o.O5)(),updatedAt:(0,o.O5)()})),d++}}yield n.commit();const l=(0,o.H9)((0,o.rJ)(s.firestore,"users",t,"userData"),"stats");return yield(0,o.BN)(l,{totalWords:i.size+d,lastUpdated:(0,o.O5)()},{merge:!0}),console.log(`WordStream: Synced words to Firestore - ${d} new, ${c} updated`),!0}catch(e){return console.error("WordStream: Error syncing words to Firestore:",e),!1}}))}function p(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot save chat - no authenticated user"),null;if(!e.id&&!e.conversationId)return console.warn("WordStream: Invalid chat data - missing id or conversationId"),null;const r=e.id||e.conversationId,n=Object.assign(Object.assign({},e),{id:r,conversationId:r,updatedAt:(0,o.O5)(),lastUpdated:e.lastUpdated||(new Date).toISOString(),userId:t});e.timestamp||(n.timestamp=(0,o.O5)()),console.log(`WordStream: Ready to save chat with ID ${r}. Data:`,n);const a=(0,o.rJ)(s.firestore,"users",t,"userData","chats","items"),i=(0,o.H9)(a,r);yield(0,o.BN)(i,n,{merge:!0}),console.log(`WordStream: Successfully saved chat to Firestore at ${i.path}`);try{const n=(0,o.H9)(s.firestore,"users",t);yield(0,o.mZ)(n,{lastChatId:r,lastChatTime:(0,o.O5)(),lastActivity:(0,o.O5)(),[`chatsMeta.${r}`]:{videoId:e.videoId,updatedAt:(0,o.O5)()}}),console.log("WordStream: Updated user document with chat reference")}catch(e){console.warn("WordStream: Error updating user document with chat reference:",e)}try{const e=(0,o.H9)(s.firestore,"users",t,"stats");yield(0,o.mZ)(e,{lastChatTime:(0,o.O5)(),totalChats:(0,o.GV)(1)}),console.log("WordStream: Updated stats with chat information")}catch(e){console.warn("WordStream: Error updating stats:",e)}return console.log(`WordStream: Saved chat ${r} completely`),r}catch(e){return console.error("WordStream: Error saving chat:",e),null}}))}function W(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.warn("WordStream: Cannot get chats - no authenticated user"),[];const t=(0,o.rJ)(s.firestore,"users",e,"chats"),r=(yield(0,o.GG)(t)).docs.map((e=>{var t,r;const o=e.data();return Object.assign(Object.assign({id:e.id},o),{createdAt:null===(t=(0,a.cP)(o.createdAt))||void 0===t?void 0:t.toISOString(),updatedAt:null===(r=(0,a.cP)(o.updatedAt))||void 0===r?void 0:r.toISOString()})}));return console.log(`WordStream: Retrieved ${r.length} chats`),r}catch(e){return console.error("WordStream: Error getting chats:",e),[]}}))}function I(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot delete chat - no authenticated user"),!1;console.log(`WordStream: Deleting chat ${e} for user ${t}`);const r=(0,o.H9)((0,o.rJ)(s.firestore,"users",t,"userData","chats","items"),e),n=yield(0,o.x7)(r);let a=null;if(n.exists()){a=n.data().videoId,console.log(`WordStream: Found chat to delete with videoId: ${a}`)}yield(0,o.kd)(r),console.log(`WordStream: Deleted chat document at ${r.path}`);try{const r=(0,o.H9)(s.firestore,"users",t),n={};n[`chatsMeta.${e}`]=(0,o.CL)();const a=yield(0,o.x7)(r);a.exists()&&a.data().lastChatId===e&&(n.lastChatId=null),yield(0,o.mZ)(r,n),console.log("WordStream: Removed chat references from user document")}catch(e){console.warn("WordStream: Error updating user document after chat deletion:",e)}if(a)try{const r=(0,o.H9)((0,o.rJ)(s.firestore,"users",t,"userData","videos"),a);yield(0,o.mZ)(r,{[`chatIds.${e}`]:(0,o.CL)(),lastUpdated:(0,o.O5)()}),console.log("WordStream: Updated video metadata after chat deletion")}catch(e){console.warn("WordStream: Error updating video document after chat deletion:",e)}try{const e=(0,o.H9)(s.firestore,"users",t,"stats");yield(0,o.mZ)(e,{totalChats:(0,o.GV)(-1),lastUpdated:(0,o.O5)()}),console.log("WordStream: Updated stats after chat deletion")}catch(e){console.warn("WordStream: Error updating stats after chat deletion:",e)}return console.log(`WordStream: Successfully deleted chat ${e} and all references`),!0}catch(e){return console.error("WordStream: Error deleting chat:",e),!1}}))}function O(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.error("WordStream: Cannot delete chats - no authenticated user"),-1;const r=(0,o.rJ)(s.firestore,"users",t,"chats"),n=(0,o.P)(r,(0,o._M)("videoId","==",e)),a=yield(0,o.GG)(n),i=(0,o.wP)(s.firestore);return a.docs.forEach((e=>{i.delete(e.ref)})),yield i.commit(),a.size}catch(e){return console.error("WordStream: Error deleting all chats for video from Firestore:",e),-1}}))}function E(e){const t=u();if(!t)return console.warn("WordStream: Cannot subscribe to chats - no user ID available"),e([]),()=>{};const r=[],n={},i=()=>{const t=Object.values(n).sort(((e,t)=>new Date(t.lastUpdated).getTime()-new Date(e.lastUpdated).getTime()));console.log(`WordStream: Sending ${t.length} chats to callback`),e(t)};try{console.log("WordStream: Setting up user document listener for chat metadata");const e=(0,o.H9)(s.firestore,"users",t),c=(0,o.aQ)(e,(e=>d(this,void 0,void 0,(function*(){var r;try{if(!e.exists())return void console.log(`WordStream: User document not found for ${t}`);const c=e.data().chatsMeta||{};if(console.log(`WordStream: User document has ${Object.keys(c).length} chat references`),Object.keys(c).length>0){const e=Object.keys(c).filter((e=>!n[e]));if(e.length>0){console.log(`WordStream: Found ${e.length} new chat references to fetch`);const c=(0,o.rJ)(s.firestore,"users",t,"userData","chats","items");for(const s of e)try{const e=yield(0,o.x7)((0,o.H9)(c,s));if(e.exists()){const o=e.data(),i={id:s,conversationId:s,videoId:o.videoId||"",videoTitle:o.videoTitle||"",videoURL:o.videoURL||"",userId:t,lastUpdated:(null===(r=(0,a.cP)(o.updatedAt))||void 0===r?void 0:r.toISOString())||o.lastUpdated||(new Date).toISOString(),messages:o.messages||[]};n[s]=i}}catch(e){console.warn(`WordStream: Error fetching individual chat ${s}:`,e)}i()}}}catch(e){console.warn("WordStream: Error processing user document update:",e)}}))),(e=>{console.warn("WordStream: Error in user document subscription:",e)}));r.push(c)}catch(e){console.warn("WordStream: Could not set up user document listener:",e)}try{console.log("WordStream: Setting up chats collection listener");const e=(0,o.rJ)(s.firestore,"users",t,"userData","chats","items"),c=(0,o.aQ)(e,(e=>{try{let r=!1;e.docChanges().forEach((e=>{var o;const s=e.doc.id,i=e.doc.data();if("added"===e.type||"modified"===e.type){const e={id:s,conversationId:s,videoId:i.videoId||"",videoTitle:i.videoTitle||"",videoURL:i.videoURL||"",userId:t,lastUpdated:(null===(o=(0,a.cP)(i.updatedAt))||void 0===o?void 0:o.toISOString())||i.lastUpdated||(new Date).toISOString(),messages:[]};Array.isArray(i.messages)&&(e.messages=i.messages.map((e=>{if(e&&"object"==typeof e&&e.timestamp)try{const t=(0,a.cP)(e.timestamp);return Object.assign(Object.assign({},e),{timestamp:(null==t?void 0:t.toISOString())||(new Date).toISOString()})}catch(t){return e}return e}))),n[s]=e,r=!0}else"removed"===e.type&&n[s]&&(delete n[s],r=!0)})),r&&(console.log(`WordStream: Chat collection changed, updating with ${Object.keys(n).length} chats`),i())}catch(e){console.warn("WordStream: Error processing chat data:",e)}}),(e=>{console.warn("WordStream: Error in chats subscription:",(null==e?void 0:e.code)||e)}));r.push(c)}catch(e){console.warn("WordStream: Could not set up chats collection listener:",e)}return()=>{r.forEach((e=>e())),console.log("WordStream: Unsubscribed from all chat listeners")}}function U(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot save note - user not authenticated"),b(e),e.id||"";const r=e.id||(0,c.A)(),n=Object.assign(Object.assign({},e),{id:r,timestamp:e.timestamp||(new Date).toISOString(),lastSynced:(new Date).toISOString(),userId:t}),a=(0,o.H9)(s.firestore,"users",t,"notes",r);yield(0,o.BN)(a,n),b(n);try{const n=(0,o.H9)(s.firestore,"users",t);yield(0,o.mZ)(n,{lastNoteId:r,lastNoteTime:(0,o.O5)(),lastActivity:(0,o.O5)(),[`notesMetadata.${r}`]:{videoId:e.videoId,updatedAt:(0,o.O5)()}})}catch(e){console.warn("WordStream: Error updating user document with note metadata:",e)}if(e.videoId)try{const n=(0,o.H9)(s.firestore,"users",t,"videos",e.videoId);(yield(0,o.x7)(n)).exists()?yield(0,o.mZ)(n,{lastUpdated:(0,o.O5)(),[`noteIds.${r}`]:!0}):yield(0,o.BN)(n,{videoId:e.videoId,title:e.videoTitle||"Unknown Video",url:e.videoURL||`https://www.youtube.com/watch?v=${e.videoId}`,createdAt:(0,o.O5)(),lastUpdated:(0,o.O5)(),noteIds:{[r]:!0}})}catch(e){console.warn("WordStream: Error updating video metadata:",e)}return g({type:"note:added",data:n,timestamp:(new Date).toISOString()}),r}catch(t){return console.error("WordStream: Error saving note to Firestore:",t),e?(b(e),e.id||""):""}}))}function b(e){e.id&&e.videoId?chrome.storage.local.get(["notes_storage"],(t=>{if(chrome.runtime.lastError)return void console.error("WordStream: Error getting notes from local storage:",chrome.runtime.lastError);const r=t.notes_storage||{},o=e.videoId;if(r[o]){const t=r[o].notes.findIndex((t=>t.id===e.id));t>=0?r[o].notes[t]=e:r[o].notes.push(e),r[o].lastUpdated=(new Date).toISOString()}else r[o]={videoId:o,videoTitle:e.videoTitle||"Unknown Video",videoURL:e.videoURL||`https://www.youtube.com/watch?v=${o}`,lastUpdated:(new Date).toISOString(),notes:[e]};chrome.storage.local.set({notes_storage:r},(()=>{chrome.runtime.lastError&&console.error("WordStream: Error saving notes to local storage:",chrome.runtime.lastError)}))})):console.warn("WordStream: Cannot save note to localStorage - missing id or videoId")}function D(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot get notes - no authenticated user"),[];const r=(0,o.rJ)(s.firestore,"users",t,"notes"),n=(0,o.P)(r,(0,o._M)("videoId","==",e)),i=yield(0,o.GG)(n);return i.docs.map((e=>{var t,r;const o=e.data();return Object.assign(Object.assign({id:e.id},o),{timestamp:o.timestamp?null===(t=(0,a.cP)(o.timestamp))||void 0===t?void 0:t.toISOString():(new Date).toISOString(),lastSynced:o.lastSynced?null===(r=(0,a.cP)(o.lastSynced))||void 0===r?void 0:r.toISOString():null})}))}catch(e){return console.error("WordStream: Error getting notes:",e),[]}}))}function A(e,t){return d(this,void 0,void 0,(function*(){var r,n;try{console.log(`WordStream: Starting deletion of note ${e}`);const a=yield V();if(!a.connected)return console.warn(`WordStream: Cannot delete note - ${a.error}`),!1;const i=a.userId;if(!e)return console.error("WordStream: Cannot delete note - missing noteId"),!1;try{let a=null;if(!t)try{const r=(0,o.H9)(s.firestore,"users",i,"userData","notes","items",e),n=yield(0,o.x7)(r);n.exists()&&(a=n.data(),t=a.videoId)}catch(e){console.warn(`WordStream: Error retrieving note info: ${e}`)}console.log(`WordStream: Deleting note document ${e}`);const c=(0,o.H9)(s.firestore,"users",i,"userData","notes","items",e);if(yield(0,o.kd)(c),t)try{console.log(`WordStream: Updating metadata for video ${t}`);const e=(0,o.H9)(s.firestore,"users",i,"userData","metadata"),r=yield(0,o.x7)(e);if(r.exists()&&r.data().videos&&r.data().videos[t]){const s=r.data().videos[t].noteCount||0;s<=1?(yield(0,o.mZ)(e,{[`videos.${t}`]:(0,o.CL)()}),console.log(`WordStream: Removed video ${t} from metadata (last note deleted)`)):(yield(0,o.mZ)(e,{[`videos.${t}.noteCount`]:s-1,[`videos.${t}.lastUpdated`]:(0,o.O5)()}),console.log(`WordStream: Updated note count for video ${t} in metadata`))}}catch(e){console.warn(`WordStream: Error updating metadata after note deletion: ${e}`)}try{const t=(0,o.H9)(s.firestore,"users",i);yield(0,o.mZ)(t,{lastActivity:(0,o.O5)(),[`noteMeta.${e}`]:(0,o.CL)()})}catch(e){console.warn(`WordStream: Error updating user document after note deletion: ${e}`)}if("undefined"!=typeof window&&window.localStorage)try{const r="wordstream_deleted_notes",o=JSON.parse(localStorage.getItem(r)||"[]");if(o.push({id:e,videoId:t,timestamp:(new Date).toISOString()}),localStorage.setItem(r,JSON.stringify(o)),t){const r=`wordstream_notes_${t}`,o=JSON.parse(localStorage.getItem(r)||"[]").filter((t=>t.id!==e));localStorage.setItem(r,JSON.stringify(o))}}catch(e){console.warn("WordStream: Error updating local storage for deleted note:",e)}if(g({action:"NOTE_DELETED",noteId:e,videoId:t,timestamp:(new Date).toISOString()}),"function"==typeof(null===(n=null===(r=null===chrome||void 0===chrome?void 0:chrome.storage)||void 0===r?void 0:r.local)||void 0===n?void 0:n.get))try{chrome.storage.local.get(["notes_storage"],(r=>{const o=r.notes_storage||{};if(t&&o[t]){const r=o[t];r.notes&&(r.notes=r.notes.filter((t=>t.id!==e)),0===r.notes.length&&delete o[t],chrome.storage.local.set({notes_storage:o},(()=>{console.log("WordStream: Updated chrome.storage after note deletion")})))}else{let t=!1;Object.keys(o).forEach((r=>{const s=o[r];if(s.notes){const n=s.notes.length;s.notes=s.notes.filter((t=>t.id!==e)),n!==s.notes.length&&(t=!0,0===s.notes.length&&delete o[r])}})),t&&chrome.storage.local.set({notes_storage:o},(()=>{console.log("WordStream: Updated chrome.storage after note deletion (searched all videos)")}))}}))}catch(e){console.warn(`WordStream: Error updating chrome.storage after note deletion: ${e}`)}return console.log(`WordStream: Successfully deleted note ${e}`),!0}catch(t){return console.error(`WordStream: Error deleting note ${e}:`,t),!1}}catch(e){return console.error("WordStream: Error in deleteNote:",e),!1}}))}function $(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.error("WordStream: Cannot save stats - no authenticated user"),!1;const r=(0,o.H9)(s.firestore,"users",t,"stats");return yield(0,o.BN)(r,Object.assign(Object.assign({},e),{lastUpdated:(0,o.O5)()}),{merge:!0}),!0}catch(e){return console.error("WordStream: Error saving user stats to Firestore:",e),!1}}))}function k(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.error("WordStream: Cannot get stats - no authenticated user"),null;const t=(0,o.H9)(s.firestore,"users",e,"stats"),r=yield(0,o.x7)(t);return r.exists()?r.data():null}catch(e){return console.error("WordStream: Error getting user stats from Firestore:",e),null}}))}function j(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.error("WordStream: Cannot migrate data - no authenticated user"),!1;const t=yield new Promise((e=>{chrome.storage.sync.get(null,(t=>{e(t)}))}));return t.words&&Array.isArray(t.words)&&(yield w(t.words)),t.stats&&(yield $(t.stats)),yield(0,o.BN)((0,o.H9)(s.firestore,"users",e),{dataMigrated:!0,dataMigratedAt:(0,o.O5)()},{merge:!0}),console.log("WordStream: Successfully migrated data to Firestore"),!0}catch(e){return console.error("WordStream: Error migrating data to Firestore:",e),!1}}))}function C(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return!1;const t=yield(0,o.x7)((0,o.H9)(s.firestore,"users",e));if(t.exists()){return!t.data().dataMigrated}return!0}catch(e){return console.error("WordStream: Error checking if migration is needed:",e),!1}}))}function _(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return void console.warn("WordStream: Cannot sync data - no authenticated user");console.log(`WordStream: Starting sync of ${e||"all"} data for user ${t}`);const r=[];"words"!==e&&e||r.push("words"),"stats"!==e&&e||r.push("stats"),"chats"!==e&&e||r.push("chats_storage","video_chats_map"),"notes"!==e&&e||r.push("notes_storage");const n=yield new Promise((e=>{chrome.storage.sync.get(r,(t=>{chrome.runtime.lastError&&console.error("WordStream: Error getting data from storage:",chrome.runtime.lastError),e(t)}))}));let a={words:{success:!1,count:0},stats:{success:!1},chats:{success:!1,count:0},notes:{success:!1,count:0}};if(("words"===e||!e)&&n.words&&Array.isArray(n.words))try{const e=yield w(n.words);a.words={success:e,count:n.words.length},console.log(`WordStream: Synced ${n.words.length} words to Firestore`)}catch(e){console.error("WordStream: Error syncing words:",e)}if(("stats"===e||!e)&&n.stats)try{const e=yield $(n.stats);a.stats={success:e},console.log("WordStream: Synced stats to Firestore")}catch(e){console.error("WordStream: Error syncing stats:",e)}if(("chats"===e||!e)&&n.chats_storage)try{const e=n.chats_storage||{},r=n.video_chats_map||{};let i=0,c=0;const d=(0,o.wP)(s.firestore),l=(0,o.rJ)(s.firestore,"users",t,"userData","chats","items"),u=new Set;Object.keys(e).forEach((e=>u.add(e))),Object.keys(r).forEach((e=>{(r[e]||[]).forEach((e=>u.add(e)))})),console.log(`WordStream: Found ${u.size} chat IDs to sync`);const h={};for(const r of u){i++;const s=e[r];if(s)if(s.videoId)try{const e=Object.assign(Object.assign({},s),{id:r,conversationId:r,userId:t}),n=(0,o.H9)(l,r);d.set(n,e,{merge:!0}),h[s.videoId]||(h[s.videoId]=new Set),h[s.videoId].add(r),c++}catch(e){console.error(`WordStream: Error preparing chat ${r} for batch:`,e)}else console.warn(`WordStream: Chat ${r} missing videoId`);else console.warn(`WordStream: Chat ID ${r} found in map but not in storage`)}if(c>0&&(yield d.commit(),console.log(`WordStream: Batch saved ${c} chats to Firestore`)),c>0)try{const r=(0,o.H9)(s.firestore,"users",t),n={};Object.entries(e).forEach((([e,t])=>{t&&t.videoId&&(n[`chatsMeta.${e}`]={videoId:t.videoId,updatedAt:(0,o.O5)()})})),Object.keys(n).length>0&&(yield(0,o.mZ)(r,n),console.log(`WordStream: Updated user document with chat metadata for ${Object.keys(n).length} chats`))}catch(e){console.warn("WordStream: Error updating user document with chat metadata:",e)}for(const[e,r]of Object.entries(h))try{if(r.size>0){const n=(0,o.H9)((0,o.rJ)(s.firestore,"users",t,"userData","videos"),e),a=yield(0,o.x7)(n),i={lastUpdated:(0,o.O5)()};r.forEach((e=>{i[`chatIds.${e}`]=!0})),a.exists()?yield(0,o.mZ)(n,i):yield(0,o.BN)(n,Object.assign(Object.assign({},i),{videoId:e,createdAt:(0,o.O5)()})),console.log(`WordStream: Updated video ${e} with ${r.size} chat references`)}}catch(t){console.warn(`WordStream: Error updating video ${e} with chat references:`,t)}a.chats={success:c>0,count:c},console.log(`WordStream: Synced ${c}/${i} chats to Firestore`)}catch(e){console.error("WordStream: Error syncing chats:",e)}if(("notes"===e||!e)&&n.notes_storage)try{const e=n.notes_storage;let t=0,r=0;for(const o in e){const s=e[o];for(const e in s){t++;const n=s[e];(yield U(Object.assign(Object.assign({},n),{videoId:o})))&&r++}}a.notes={success:r>0,count:r},console.log(`WordStream: Synced ${r}/${t} notes to Firestore`)}catch(e){console.error("WordStream: Error syncing notes:",e)}try{const e=(0,o.H9)(s.firestore,"users",t);yield(0,o.BN)(e,{lastSynced:(0,o.O5)(),syncResults:{words:a.words,stats:a.stats,chats:a.chats,notes:a.notes}},{merge:!0})}catch(e){console.error("WordStream: Error updating user sync info:",e)}console.log(`WordStream: Successfully completed sync of ${e||"all"} data`)}catch(t){console.error(`WordStream: Error syncing ${e||"all"} data between storage and Firestore:`,t)}}))}function N(e,t){return d(this,void 0,void 0,(function*(){try{const r=yield h();if(!r)return console.error("WordStream: Cannot save user data - no authenticated user"),!1;const n=(0,o.rJ)(s.firestore,"users",r,"userData"),a=(0,o.H9)(n,e),i=Object.assign(Object.assign({},t),{updatedAt:(0,o.O5)()});return(yield(0,o.x7)(a)).exists()||(i.createdAt=(0,o.O5)()),yield(0,o.BN)(a,i,{merge:!0}),console.log(`WordStream: Saved user data document "${e}" successfully`),!0}catch(t){return console.error(`WordStream: Error saving user data document "${e}":`,t),!1}}))}function T(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.error("WordStream: Cannot get user data - no authenticated user"),null;const r=(0,o.rJ)(s.firestore,"users",t,"userData"),n=(0,o.H9)(r,e),a=yield(0,o.x7)(n);return a.exists()?a.data():null}catch(t){return console.error(`WordStream: Error getting user data document "${e}":`,t),null}}))}const x=(0,i.sg)((e=>_(e)),2e3);function G(){return!!u()&&!("undefined"!=typeof navigator&&!navigator.onLine)}function F(e){return d(this,void 0,void 0,(function*(){try{console.log("🔍 DEBUG: Checking Firestore structure");const e=yield h();if(!e)return console.warn("DEBUG: No authenticated user found"),{error:"No authenticated user"};console.log(`DEBUG: User ID: ${e}`);const t=yield(0,o.x7)((0,o.H9)(s.firestore,"users",e));console.log("DEBUG: User document exists:",t.exists());const r={userId:e,userExists:t.exists(),userData:t.exists()?t.data():null,collections:{},videos:[],notes:[],chats:[]};t.exists()&&(r.userData=t.data());const n=["words","stats","videos","notes","chats"];for(const t of n){const n=(0,o.rJ)(s.firestore,`users/${e}/${t}`),a=yield(0,o.GG)(n);if(r.collections[t]=a.size,console.log(`DEBUG: Collection '${t}' has ${a.size} documents`),a.size>0){const e=a.docs.slice(0,5).map((e=>Object.assign({id:e.id},e.data())));"videos"===t?r.videos=e:"notes"===t?r.notes=e:"chats"===t&&(r.chats=e),console.log(`DEBUG: Sample documents in '${t}':`,e)}}return r}catch(e){return console.error("DEBUG ERROR:",e),{error:String(e)}}}))}function R(e){return d(this,void 0,void 0,(function*(){try{console.log("🔍 DEBUG: Checking chats in Firestore");const e=yield h();if(!e)return console.warn("DEBUG: No authenticated user found"),{error:"No authenticated user",total:0,byVideoId:{}};const t=(0,o.rJ)(s.firestore,`users/${e}/videos`),r=yield(0,o.GG)(t);console.log(`DEBUG: Found ${r.size} videos`);let n=0;const a={};for(const t of r.docs){const r=t.id,i=(t.data(),(0,o.rJ)(s.firestore,`users/${e}/videos/${r}/chats`)),c=yield(0,o.GG)(i);console.log(`DEBUG: Video ${r} has ${c.size} chats`),n+=c.size,c.size>0?(a[r]=c.docs.map((e=>Object.assign({id:e.id},e.data()))),console.log(`DEBUG: Sample chat from video ${r}:`,c.docs[0].data())):a[r]=[]}return console.log(`DEBUG: Total chats across all videos: ${n}`),{total:n,byVideoId:a}}catch(e){return console.error("DEBUG ERROR:",e),{error:String(e),total:0,byVideoId:{}}}}))}function H(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return{error:"No authenticated user",userId:null,isAuthenticated:!1};console.log("WordStream DEBUG: Starting comprehensive sync check");const t={userId:e,isAuthenticated:!0,timestamp:(new Date).toISOString(),firestore:{user:null,userData:{},collections:{}},localStorage:{}};try{const r=(0,o.H9)(s.firestore,"users",e),n=yield(0,o.x7)(r);n.exists()?t.firestore.user=n.data():t.firestore.user={exists:!1}}catch(e){t.firestore.user={error:String(e)}}try{const r=(0,o.rJ)(s.firestore,"users",e,"userData");(yield(0,o.GG)(r)).forEach((e=>{t.firestore.userData[e.id]=e.data()}))}catch(e){t.firestore.userData.error=String(e)}const r=[["userData","chats","items"],["userData","notes","items"],["userData","wordlist","items"],["userData","videos"]];for(const n of r){const r=n.join("/");try{const a=(0,o.rJ)(s.firestore,"users",e,...n),i=yield(0,o.GG)(a),c=[];i.forEach((e=>{c.push({id:e.id,data:e.data()})})),t.firestore.collections[r]={count:c.length,items:c.slice(0,5)}}catch(e){t.firestore.collections[r]={error:String(e),count:0}}}if("undefined"!=typeof chrome&&chrome.storage)try{const e=yield new Promise((e=>{chrome.storage.local.get(null,(t=>e(t)))}));Object.keys(e).forEach((r=>{const o=e[r];if("chats_storage"===r){const e=Object.keys(o||{});t.localStorage.chats_storage={count:e.length,chatIds:e}}else if("video_chats_map"===r){const e=Object.keys(o||{});t.localStorage.video_chats_map={videoCount:e.length,mappings:o}}else if("notes_storage"===r){const e=Object.keys(o||{});let r=0;e.forEach((e=>{const t=Object.keys(o[e]||{}).length;r+=t})),t.localStorage.notes_storage={videoCount:e.length,totalNotes:r}}else"words"===r?t.localStorage.words={count:Array.isArray(o)?o.length:0}:t.localStorage[r]="object"==typeof o?{type:"object",size:JSON.stringify(o).length}:{type:typeof o,value:String(o).substring(0,100)}}))}catch(e){t.localStorage.error=String(e)}return console.log("WordStream DEBUG: Completed sync check",t),t}catch(e){return console.error("WordStream DEBUG ERROR:",e),{error:String(e)}}}))}function M(){return d(this,void 0,void 0,(function*(){var e;console.log("WordStream: Checking Firestore state...");const t={collections:{words:{exists:!1,count:0},chats:{exists:!1,count:0},notes:{exists:!1,count:0}},documents:{stats:{exists:!1},user:{exists:!1}},localStorage:{words:{exists:!1,count:0},chats:{exists:!1,count:0},notes:{exists:!1,count:0}},timestamps:{check:(new Date).toISOString()}};try{const r=yield h();if(!r)return console.warn("WordStream: Cannot check sync status - no authenticated user"),{error:"Not authenticated"};t.userId=r;try{const e=(0,o.H9)(s.firestore,"users",r),n=yield(0,o.x7)(e);t.documents.user.exists=n.exists(),t.documents.user.data=n.exists()?n.data():null}catch(e){console.error("WordStream: Error checking user document:",e),t.errors=t.errors||{},t.errors.userDoc=String(e)}try{const e=(0,o.rJ)(s.firestore,"users",r,"userData","words","items"),n=yield(0,o.GG)(e);t.collections.words.exists=!0,t.collections.words.count=n.size,t.collections.words.items=n.docs.map((e=>Object.assign({id:e.id},e.data())))}catch(e){console.error("WordStream: Error checking words collection:",e),t.errors=t.errors||{},t.errors.wordsCollection=String(e)}try{const e=(0,o.rJ)(s.firestore,"users",r,"userData","chats","items"),n=yield(0,o.GG)(e);t.collections.chats.exists=!0,t.collections.chats.count=n.size,t.collections.chats.items=n.docs.map((e=>Object.assign({id:e.id},e.data())))}catch(e){console.error("WordStream: Error checking chats collection:",e),t.errors=t.errors||{},t.errors.chatsCollection=String(e)}try{const n=(0,o.rJ)(s.firestore,"users",r,"userData","notes","items"),a=yield(0,o.GG)(n);t.collections.notes.exists=!0,t.collections.notes.count=a.size;const i=a.docs.map((e=>{const t=e.data();return Object.assign({id:e.id},t)})),c={};if(i.forEach((e=>{e.videoId&&(c[e.videoId]||(c[e.videoId]=[]),c[e.videoId].push(e))})),t.collections.notes.items=i,t.collections.notes.byVideo=c,t.documents.user.exists&&(null===(e=t.documents.user.data)||void 0===e?void 0:e.noteMeta)){const e=t.documents.user.data.noteMeta;t.collections.notes.referencesInUser=Object.keys(e).length;const r=new Set(i.map((e=>e.id))),o=new Set(Object.keys(e)),s=[...r].filter((e=>!o.has(e))),n=[...o].filter((e=>!r.has(e)));t.collections.notes.mismatches={onlyInCollection:s,onlyInUserDoc:n,hasMismatches:s.length>0||n.length>0}}}catch(e){console.error("WordStream: Error checking notes collection:",e),t.errors=t.errors||{},t.errors.notesCollection=String(e)}try{const e=(0,o.rJ)(s.firestore,"users",r,"userData","videos"),n=yield(0,o.GG)(e);t.collections.videos={exists:!0,count:n.size};const a=n.docs.filter((e=>e.data().noteIds&&Object.keys(e.data().noteIds).length>0)).map((e=>({id:e.id,title:e.data().title||"Unknown",noteIds:Object.keys(e.data().noteIds||{})})));t.collections.videos.withNotes=a,t.collections.videos.totalNotesReferences=a.reduce(((e,t)=>e+t.noteIds.length),0)}catch(e){console.error("WordStream: Error checking videos collection:",e),t.errors=t.errors||{},t.errors.videosCollection=String(e)}try{const e=(0,o.H9)(s.firestore,"users",r,"userData","stats"),n=yield(0,o.x7)(e);t.documents.stats.exists=n.exists(),t.documents.stats.data=n.exists()?n.data():null}catch(e){console.error("WordStream: Error checking stats document:",e),t.errors=t.errors||{},t.errors.statsDoc=String(e)}if("undefined"!=typeof chrome&&chrome.storage)try{const e=yield new Promise((e=>{chrome.storage.local.get(null,(t=>{e(t)}))}));t.localStorage.words.exists=!!e.saved_words,t.localStorage.words.count=e.saved_words?Object.keys(e.saved_words).length:0;const r=Object.keys(e).filter((e=>e.startsWith("notes_"))),o={};let s=0;r.forEach((t=>{const r=t.replace("notes_",""),n=e[t]||[];o[r]=n,s+=n.length})),t.localStorage.notes.exists=r.length>0,t.localStorage.notes.count=s,t.localStorage.notes.byVideo=o,t.localStorage.notes.videoCount=r.length,t.localStorage.chats.exists=!!e.chats_storage,t.localStorage.chats.count=e.chats_storage?Object.keys(e.chats_storage).length:0}catch(e){console.error("WordStream: Error checking local storage:",e),t.errors=t.errors||{},t.errors.localStorage=String(e)}return console.log("WordStream: Debug info collected:",t),t}catch(e){return console.error("WordStream: Error in debugFirestoreState:",e),{error:String(e)}}}))}function P(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.warn("WordStream: Cannot force resync chats - no authenticated user"),!1;console.log(`WordStream: Starting forced resync of chats for user ${e}`);const t=yield new Promise((e=>{chrome.storage.sync.get(["chats_storage","video_chats_map"],(t=>{chrome.runtime.lastError?(console.error("WordStream: Error getting chats from storage:",chrome.runtime.lastError),e(null)):e(t)}))}));if(!t||!t.chats_storage)return console.warn("WordStream: No chats found in local storage for resync"),!1;const r=t.chats_storage||{},n=t.video_chats_map||{};try{const t=(0,o.rJ)(s.firestore,"users",e,"userData","chats","items"),r=yield(0,o.GG)(t);if(!r.empty){console.log(`WordStream: Removing ${r.size} existing chats before resync`);const e=(0,o.wP)(s.firestore);r.docs.forEach((t=>{e.delete(t.ref)})),yield e.commit()}const n=(0,o.H9)(s.firestore,"users",e),a=yield(0,o.x7)(n);a.exists()&&a.data().chatsMeta&&(yield(0,o.mZ)(n,{chatsMeta:(0,o.CL)()}),console.log("WordStream: Cleared chat metadata from user document"))}catch(e){console.error("WordStream: Error clearing existing chats:",e)}const a=Object.keys(r);if(0===a.length)return console.warn("WordStream: No chats found in local storage to resync"),!1;console.log(`WordStream: Found ${a.length} chats to resync`);const i=50;let c=0,d=0;for(let t=0;t<a.length;t+=i){const n=(0,o.wP)(s.firestore),l=a.slice(t,t+i),u={};l.forEach((t=>{const a=r[t];if(!a||!a.videoId)return console.warn(`WordStream: Chat ${t} is missing data, skipping`),void d++;try{const r=new Date,i=Object.assign(Object.assign({},a),{id:t,conversationId:t,userId:e,updatedAt:a.lastUpdated||r.toISOString(),lastUpdated:a.lastUpdated||r.toISOString()}),d=(0,o.rJ)(s.firestore,"users",e,"userData","chats","items"),l=(0,o.H9)(d,t);n.set(l,i),u[`chatsMeta.${t}`]={videoId:a.videoId,updatedAt:(0,o.O5)()},c++}catch(e){console.error(`WordStream: Error preparing chat ${t} for batch:`,e),d++}}));try{if(yield n.commit(),console.log(`WordStream: Batch ${Math.floor(t/i)+1} committed with ${l.length} chats`),Object.keys(u).length>0){const t=(0,o.H9)(s.firestore,"users",e);yield(0,o.mZ)(t,u)}}catch(e){console.error(`WordStream: Error committing batch ${Math.floor(t/i)+1}:`,e),d+=l.length,c-=l.length}}try{const t={};Object.entries(r).forEach((([e,r])=>{r&&r.videoId&&(t[r.videoId]||(t[r.videoId]=[]),t[r.videoId].push(e))})),Object.entries(n).forEach((([e,r])=>{t[e]||(t[e]=[]),r.forEach((r=>{t[e].includes(r)||t[e].push(r)}))}));for(const[r,n]of Object.entries(t))if(n.length>0)try{const t=(0,o.H9)((0,o.rJ)(s.firestore,"users",e,"userData","videos"),r),a={videoId:r,lastUpdated:(0,o.O5)()};n.forEach((e=>{a[`chatIds.${e}`]=!0})),yield(0,o.BN)(t,a,{merge:!0}),console.log(`WordStream: Updated video ${r} with ${n.length} chat references`)}catch(e){console.error(`WordStream: Error updating video ${r}:`,e)}}catch(e){console.error("WordStream: Error updating video documents:",e)}try{const t=(0,o.H9)((0,o.rJ)(s.firestore,"users",e,"userData"),"stats");yield(0,o.mZ)(t,{"chats.total":c,lastUpdated:(0,o.O5)()}),console.log(`WordStream: Updated stats with ${c} total chats`)}catch(e){console.warn("WordStream: Error updating stats with chat count:",e)}try{const t=(0,o.H9)(s.firestore,"users",e);yield(0,o.mZ)(t,{lastForceResync:(0,o.O5)(),forceResyncResults:{chats:{success:c>0,count:c,errors:d}}})}catch(e){console.error("WordStream: Error updating user sync info:",e)}return console.log(`WordStream: Completed forced resync of chats with ${c} successes and ${d} errors`),c>0}catch(e){return console.error("WordStream: Error during forced resync of chats:",e),!1}}))}function J(){return d(this,void 0,void 0,(function*(){try{console.log("WordStream: Starting forced notes resync");const e=yield h();if(!e)return console.error("WordStream: Cannot resync notes - no authenticated user"),!1;const t=yield new Promise((e=>{chrome.storage.local.get(null,(t=>{chrome.runtime.lastError?(console.error("WordStream: Error getting local storage data:",chrome.runtime.lastError),e({})):e(t)}))})),r=[],n={};if(t.notes_storage&&Object.entries(t.notes_storage).forEach((([e,t])=>{e&&t&&t.notes&&(n[e]={title:t.videoTitle||"Unknown Video",url:t.videoURL||`https://www.youtube.com/watch?v=${e}`,notes:[],lastUpdated:t.lastUpdated},t.notes.forEach((o=>{o&&o.id&&(r.push(Object.assign(Object.assign({},o),{videoId:e,videoTitle:t.videoTitle,videoURL:t.videoURL})),n[e].notes.push(o))})))})),Object.keys(t).forEach((e=>{if(e.startsWith("notes_")&&"notes_storage"!==e){const o=e.replace("notes_",""),s=t[e];if(Array.isArray(s)&&s.length>0){if(!n[o]){const e=s[0];n[o]={title:e.videoTitle||"Unknown Video",url:e.videoURL||`https://www.youtube.com/watch?v=${o}`,notes:[],lastUpdated:e.timestamp}}s.forEach((e=>{if(!e||!e.id)return;const t=Object.assign(Object.assign({},e),{videoId:o});r.some((t=>t.id===e.id))||(r.push(t),n[o].notes.push(e))}))}}})),0===r.length)return console.log("WordStream: No notes found in local storage to sync"),!0;console.log(`WordStream: Found ${r.length} notes across ${Object.keys(n).length} videos to sync`);const a={};Object.entries(n).forEach((([e,t])=>{a[`videos.${e}`]={title:t.title,url:t.url||`https://www.youtube.com/watch?v=${e}`,hasNotes:!0,noteCount:t.notes.length,lastUpdated:(0,o.O5)()}}));const i=(0,o.H9)(s.firestore,"users",e,"userData","metadata");yield(0,o.BN)(i,a,{merge:!0}),console.log("WordStream: Updated metadata with all videos");const c=500;let d=0;const l=(0,o.rJ)(s.firestore,"users",e,"userData","notes","items"),u=yield(0,o.GG)(l),m=new Set(u.docs.map((e=>e.id)));for(;d<r.length;){const e=(0,o.wP)(s.firestore),t=r.slice(d,d+c);let n=0;for(const r of t){if(m.has(r.id))continue;const t=Object.assign(Object.assign({},r),{videoId:r.videoId,content:r.content||"",timestamp:r.timestamp||(new Date).toISOString(),updatedAt:r.updatedAt||(new Date).toISOString(),videoTime:"number"==typeof r.videoTime?r.videoTime:0}),s=(0,o.H9)(l,r.id);e.set(s,t),n++}n>0&&(yield e.commit(),console.log(`WordStream: Synced batch of ${n} notes to Firestore`)),d+=t.length}const f=(0,o.H9)(s.firestore,"users",e),S={};return r.forEach((e=>{S[`noteMeta.${e.id}`]={id:e.id,videoId:e.videoId,timestamp:e.timestamp||(new Date).toISOString(),updatedAt:e.updatedAt||(new Date).toISOString()}})),yield(0,o.mZ)(f,Object.assign(Object.assign({},S),{lastActivity:(0,o.O5)()})),console.log(`WordStream: Successfully synced ${r.length} notes to Firestore`),g({action:"NOTES_SYNCED",count:r.length}),!0}catch(e){return console.error("WordStream: Error in forceResyncNotes:",e),!1}}))}function L(){return d(this,void 0,void 0,(function*(){try{const e=yield h();if(!e)return console.warn("WordStream: Cannot get videos with notes - no authenticated user"),[];const t=(0,o.H9)(s.firestore,"users",e,"userData","metadata"),r=yield(0,o.x7)(t);if(!r.exists()||!r.data().videos){console.log("WordStream: No videos with notes found in user metadata");const t=(0,o.rJ)(s.firestore,"users",e,"userData","notes","items"),r=yield(0,o.GG)(t);if(r.empty)return console.log("WordStream: No notes found"),[];const n={};r.forEach((e=>{var t;const r=e.data(),o=r.videoId;if(!o)return;n[o]||(n[o]={title:r.videoTitle||"Unknown Video",url:r.videoURL||`https://www.youtube.com/watch?v=${o}`,lastUpdated:(null===(t=(0,a.cP)(r.timestamp||r.updatedAt))||void 0===t?void 0:t.toISOString())||(new Date).toISOString(),notes:[]});const s=(0,a.cP)(r.timestamp||r.updatedAt),i=new Date(n[o].lastUpdated||0);s&&s>i&&(n[o].lastUpdated=s.toISOString()),n[o].notes.push(Object.assign(Object.assign({},r),{id:e.id,formattedTime:void 0!==r.videoTime?z(r.videoTime):null}))}));return Object.entries(n).map((([e,t])=>({videoId:e,videoTitle:t.title||"Unknown Video",videoURL:t.url||`https://www.youtube.com/watch?v=${e}`,lastUpdated:t.lastUpdated||(new Date).toISOString(),notes:t.notes}))).sort(((e,t)=>{if(!e||!t)return 0;const r=new Date(e.lastUpdated).getTime();return new Date(t.lastUpdated).getTime()-r}))}const n=r.data().videos||{},i=Object.keys(n).map((e=>d(this,void 0,void 0,(function*(){var t;const r=n[e];if(!r||!r.hasNotes)return null;const o=yield D(e);return o&&0!==o.length?{videoId:e,videoTitle:r.title||"Unknown Video",videoURL:r.url||`https://www.youtube.com/watch?v=${e}`,lastUpdated:(null===(t=(0,a.cP)(r.lastUpdated))||void 0===t?void 0:t.toISOString())||(new Date).toISOString(),notes:o.map((e=>Object.assign(Object.assign({},e),{formattedTime:void 0!==e.videoTime?z(e.videoTime):null})))}:null}))));return(yield Promise.all(i)).filter(Boolean).sort(((e,t)=>{if(!e||!t)return 0;const r=new Date(e.lastUpdated).getTime();return new Date(t.lastUpdated).getTime()-r}))}catch(e){return console.error("WordStream: Error getting videos with notes:",e),[]}}))}function B(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot delete notes - no authenticated user"),0;console.log(`WordStream: Deleting all notes for video ${e}`);const r=(0,o.rJ)(s.firestore,"users",t,"userData","notes","items"),n=(0,o.P)(r,(0,o._M)("videoId","==",e)),a=yield(0,o.GG)(n);if(a.empty)return console.log(`WordStream: No notes found for video ${e}`),0;const i=(0,o.wP)(s.firestore);let c=0;const d=[];a.forEach((e=>{i.delete(e.ref),d.push(e.id),c++}));try{const r=(0,o.H9)(s.firestore,"users",t,"userData","metadata"),n=yield(0,o.x7)(r);n.exists()&&n.data().videos&&n.data().videos[e]&&i.update(r,{[`videos.${e}`]:(0,o.CL)()})}catch(e){console.warn(`WordStream: Error updating user metadata document: ${e}`)}try{const e=(0,o.H9)(s.firestore,"users",t),r={};d.forEach((e=>{r[`noteMeta.${e}`]=(0,o.CL)()})),i.update(e,Object.assign(Object.assign({},r),{lastActivity:(0,o.O5)()}))}catch(e){console.warn(`WordStream: Error updating user document: ${e}`)}return yield i.commit(),d.forEach((t=>{g({action:"NOTE_DELETED",noteId:t,videoId:e})})),console.log(`WordStream: Successfully deleted ${c} notes for video ${e}`),c}catch(t){return console.error(`WordStream: Error deleting notes for video ${e}:`,t),0}}))}function z(e){if(null==e)return"00:00";return`${Math.floor(e/60)}:${Math.floor(e%60).toString().padStart(2,"0")}`}function V(){return d(this,void 0,void 0,(function*(){try{if(console.log("WordStream: Checking Firestore connection..."),!s.firestore)return{connected:!1,authenticated:!1,userId:null,error:"Firestore not initialized"};const e=yield h();if(!!e)try{const t=(0,o.H9)(s.firestore,"users",e);return yield(0,o.x7)(t),console.log("WordStream: Successfully connected to Firestore and authenticated"),{connected:!0,authenticated:!0,userId:e}}catch(t){return console.error("WordStream: Error reading from Firestore:",t),{connected:!1,authenticated:!0,userId:e,error:`Read error: ${(null==t?void 0:t.message)||t}`}}return{connected:!1,authenticated:!1,userId:null,error:"Not authenticated"}}catch(e){return console.error("WordStream: Error checking Firestore connection:",e),{connected:!1,authenticated:!1,userId:null,error:(null==e?void 0:e.message)||String(e)}}}))}function Z(e){if("undefined"==typeof window)return()=>{};const t=t=>{if(t.key&&t.key.startsWith("wordstream_broadcast_"))try{const r=JSON.parse(t.newValue||"{}");e(r)}catch(e){console.warn("WordStream: Error processing broadcast from localStorage:",e)}};return window.addEventListener("storage",t),()=>{window.removeEventListener("storage",t)}}function Q(e){return d(this,void 0,void 0,(function*(){try{const t=yield h();if(!t)return console.warn("WordStream: Cannot update stats - user not authenticated"),!1;const r=(0,o.H9)(s.firestore,"users",t),n=(0,o.H9)((0,o.rJ)(r,"userData"),"stats"),a={};return Object.entries(e).forEach((([e,t])=>{if(t&&"object"==typeof t&&"increment"in t){const r="number"==typeof t.increment?t.increment:1;a[e]=(0,o.GV)(r)}else a[e]=t})),a.lastUpdated||(a.lastUpdated=(new Date).toISOString()),yield(0,o.BN)(n,a,{merge:!0}),!0}catch(e){return console.error("WordStream: Error updating user stats:",e),!1}}))}},1712:(e,t,r)=>{function o(e,t){let r=null;return function(...o){null!==r&&clearTimeout(r),r=setTimeout((()=>{r=null,e(...o)}),t)}}r.d(t,{sg:()=>o})},4210:(e,t,r)=>{r.d(t,{A:()=>o});const o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},6984:(e,t,r)=>{let o;r.d(t,{A:()=>n});const s=new Uint8Array(16);function n(){if(!o){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");o=crypto.getRandomValues.bind(crypto)}return o(s)}},1060:(e,t,r)=>{r.d(t,{k:()=>s});const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function s(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}},6235:(e,t,r)=>{r.d(t,{A:()=>a});var o=r(4210),s=r(6984),n=r(1060);const a=function(e,t,r){if(o.A.randomUUID&&!t&&!e)return o.A.randomUUID();const a=(e=e||{}).random??e.rng?.()??(0,s.A)();if(a.length<16)throw new Error("Random bytes length must be >= 16");if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){if((r=r||0)<0||r+16>t.length)throw new RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[r+e]=a[e];return t}return(0,n.k)(a)}}}]);